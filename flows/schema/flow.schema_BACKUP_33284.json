{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/flow.schema.json",
  "type": "object",
  "required": ["id", "version", "nodes", "edges"],
  "definitions": {
    "port": {
      "type": "object",
      "required": ["port", "types"],
      "properties": {
        "port": { "type": "string" },
        "types": { "type": "array", "items": { "type": "string" } }
      }
    }
  },
  "properties": {
    "id": { "type": "string" },
    "version": { "type": "string" },
    "engine": { "type": "string" },

    "meta": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "description": { "type": "string" },
        "tags": { "type": "array", "items": { "type": "string" } }
      }
    },
    "run": { "type": "object" },

    "nodes": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["id", "kind", "type", "name", "params", "in", "out"],
        "properties": {
          "id": { "type": "string" },
          "kind": {
            "type": "string",
            "enum": ["UI", "LLM", "Prompt", "Memory", "ToolCall", "Log", "Cache", "Router", "Validator"]
          },
          "type": { "type": "string" },
          "name": { "type": "string" },
          "params": { "type": "object" },

          "llm": {
            "type": "object",
            "required": ["backend", "model"],
            "properties": {
              "backend": { "type": "string" },
              "model": { "type": "string" },
              "params": { "type": "object" },
              "strictSchema": { "type": "string", "enum": ["hard", "soft", "off"] },
              "tokens": {
                "type": "object",
                "properties": {
                  "input": { "type": "integer" },
                  "output": { "type": "integer" }
                }
              }
            }
          },

          "memory": {
            "type": "object",
            "properties": {
              "store": { "type": "string", "enum": ["sqlite", "faiss", "chroma"] },
              "k": { "type": "integer" },
              "modes": {
                "type": "array",
                "items": { "type": "string", "enum": ["save", "recall"] }
              }
            }
          },

          "in": { "type": "array", "items": { "$ref": "#/definitions/port" } },
          "out": { "type": "array", "items": { "$ref": "#/definitions/port" } }
        }
      }
    },

    "edges": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["id", "from", "to", "direction", "type"],
        "properties": {
          "id": { "type": "string" },
          "from": {
            "type": "array",
            "items": [{ "type": "string" }, { "type": "string" }],
            "minItems": 2,
            "maxItems": 2
          },
          "to": {
            "type": "array",
            "items": [{ "type": "string" }, { "type": "string" }],
            "minItems": 2,
            "maxItems": 2
          },
          "direction": { "type": "string", "enum": ["forward", "reverse", "bidirectional"] },
          "type": { "type": "string", "enum": ["data", "sensor", "telemetry"] },
          "label": { "type": "string" }
        }
      }
    },

    "prompts": { "type": "object" },
    "models": { "type": "object" },
    "profiles": { "type": "object" }
  }
}

